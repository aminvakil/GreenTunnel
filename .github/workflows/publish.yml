name: Publish

on:
  create:
    tags:
      - v*

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish-docker-hub:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve tag
        run: |
          DOCKER_IMAGE=aminvakil/green-tunnel
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo "TAGS=$TAGS" >> $GITHUB_ENV
      - uses: actions/checkout@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          regsitry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          push: true
          tags: quay.io/${TAGS}

  publish-docker-hub-for-arm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Change Base Image
        run: sed -i 's/mhart\/alpine-node:12/balenalib\/raspberry-pi-alpine-node/g' Dockerfile

      - name: Customizable Docker Buildx Build
        uses: zmingxie/docker_buildx@v1.1
        with:
          tag: arm,arm-latest,arm-1.7.5
          imageName: sadeghhayeri/green-tunnel
          dockerFile: Dockerfile
          publish: true
          platform: linux/arm64,linux/arm/v7
          dockerHubUser: ${{ secrets.DOCKER_USERNAME }}
          dockerHubPassword: ${{ secrets.DOCKER_PASSWORD }}

  build-for-mac:
    runs-on: macOS-latest
    needs: [publish-npm]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Dependencies
        working-directory: ./gui
        run: npm ci

      - name: Update GreenTunnel Core
        working-directory: ./gui
        run: npm install green-tunnel --save

      - name: Fix GUI Naming
        working-directory: ./gui
        run: |
          sed -i '' 's/green-tunnel-gui/green-tunnel/g' package.json
          sed -i '' 's/green-tunnel-gui/green-tunnel/g' package-lock.json

      - name: Generate new icons files
        working-directory: ./gui
        run: npm run generate-icons

      - name: Build for MacOS
        working-directory: ./gui
        run: npm run package-mac

      - name: Zip
        working-directory: ./gui/release-builds/green-tunnel-darwin-x64
        run: zip -r green-tunnel-macos.zip green-tunnel.app

      - name: Save to Artifact
        uses: actions/upload-artifact@v1
        with:
          name: builds
          path: ./gui/release-builds/green-tunnel-darwin-x64/green-tunnel-macos.zip

  build-for-windows:
    runs-on: windows-latest
    needs: [publish-npm]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Update GreenTunnel Core
        working-directory: ./gui
        run: npm install green-tunnel --save

      - name: Fix GUI Naming
        working-directory: ./gui
        run: |
          powershell -Command "(gc package.json) -replace 'green-tunnel-gui', 'green-tunnel' | Out-File -encoding ASCII package.json"
          powershell -Command "(gc package-lock.json) -replace 'green-tunnel-gui', 'green-tunnel' | Out-File -encoding ASCII package-lock.json"

      - name: Generate new icons files
        working-directory: ./gui
        run: npm run generate-icons

      - name: Build for Windows
        working-directory: ./gui
        run: npm run package-win

      - name: Add Windows Installer
        working-directory: ./gui
        run: npm run windows-installer

      - name: Save to Artifact
        uses: actions/upload-artifact@v1
        with:
          name: builds
          path: ./gui/release-builds/green-tunnel/windows-installer/green-tunnel-installer.exe

  build-for-linux:
    runs-on: ubuntu-latest
    needs: [publish-npm]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Dependencies
        working-directory: ./gui
        run: |
          npm ci
          npm install -g electron-installer-debian

      - name: Update GreenTunnel Core
        working-directory: ./gui
        run: npm install green-tunnel --save

      - name: Fix GUI Naming
        working-directory: ./gui
        run: |
          sed -i 's/green-tunnel-gui/green-tunnel/g' package.json
          sed -i 's/green-tunnel-gui/green-tunnel/g' package-lock.json

      - name: Generate new icons files
        working-directory: ./gui
        run: npm run generate-icons

      - name: Build for Linux
        working-directory: ./gui
        run: npm run package-linux

      - name: Add Linux Installer
        working-directory: ./gui
        run: npm run linux-installer

      - name: Zip
        working-directory: ./gui/release-builds
        run: zip -r green-tunnel-debian.zip *.deb

      - name: Save to Artifact
        uses: actions/upload-artifact@v1
        with:
          name: builds
          path: ./gui/release-builds/green-tunnel-debian.zip

  new-release:
    runs-on: ubuntu-latest
    needs: [build-for-mac, build-for-windows, build-for-linux]
    steps:
      - name: Download Builds
        uses: actions/download-artifact@v1
        with:
          name: builds

      - name: Zip for Windows!
        run: zip -r builds/green-tunnel-windows.zip builds/green-tunnel-installer.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload MacOS Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/green-tunnel-macos.zip
          asset_name: green-tunnel-macos.zip
          asset_content_type: application/app

      - name: Upload Windows Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/green-tunnel-windows.zip
          asset_name: green-tunnel-windows.zip
          asset_content_type: application/zip

      - name: Upload Linux Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/green-tunnel-debian.zip
          asset_name: green-tunnel-debian.zip
          asset_content_type: application/zip
